/*****************************************************************************
TITLE: Claims																																
AUTHOR:   Balbeer Yadav (1801CS13)
Declaration of Authorship
This txt file, claims.txt, is part of the assignment of CS321/CS322 at the 
department of Computer Science and Engg, IIT Patna . 
*****************************************************************************/

Language Used : C
SET implemented : YES
data implemented: YES (using separate Data Segment )

Files:
==========
*All the files i submitted, emu.c, claims.txt and sample test files, have my name and student id at the start, along with a declaration of authorship.

The evidence for Assembler including the output files from the X (eg five)  test examples has also been uploaded. They are test1, test3 and mySample.asm. 
All the test files have been tested and work properly. 

*Both of my c programs did not show any errors and warnings when i compiled it with
gcc -std=c89 -pedantic and gcc -std=c89 -pedantic -W -Wall -Wpointer-arith -Wwrite-strings -Wstrict-prototypes standard  or equilvalent ....or gcc ...

*Two programs are compilable with gcc asm.c -o asm and gcc emu.c -o emu.


=============================
Program format and structure:
=============================
1. The emulator :

	* with three data structures to store respectively memory, mnemonic table with expected operands
		  and a linked list structure word.
    * loads object file, 
    * by giving the instructions like "-b/-a" , the program can produce memory dump before/after execution.
    * by giving the instruction like "-t", the program prints the result of program executed.
    * detects errant programs.


=============================
Testing:
=============================

1. The emulator:

I have tested four examples shown as bellow. The errors only occurred in the file test3.o and 
the program immediately stopped with an error message on the screen. 

The others were tested without any errors detected and produced excution data both on the screen and 
output text file for each example according to the usage instruction. 

After running the bin file given, the trace data are the same as 
the implemented result from my own program.

1)
Filename: test1.asm
Outcome: Gave infinite loop as expected


2)
Filename: test2.asm
Outcome: Gave errors and didn't execute


3)
Filename: test3.asm
Output: test3.txt
Outcome: successfully loaded values using SET 

4)  // This assembly I made myself to test out arithmetic operations using SET
Filename: mySample.asm
Output: mySample.txt
Outcome: successfully did operations like addition subtraction using variables declared using SET